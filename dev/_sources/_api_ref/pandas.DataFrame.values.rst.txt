.. _pandas.DataFrame.values:

:orphan:

pandas.DataFrame.values
***********************

Return a Numpy representation of the DataFrame.

.. warning::
   We recommend using :meth:`DataFrame.to_numpy` instead.

Only the values in the DataFrame will be returned, the axes labels
will be removed.

:return: numpy.ndarray
    The values of the DataFrame.

Limitations
-----------
Only numeric values supported as an output

Examples
--------
.. literalinclude:: ../../../examples/dataframe/dataframe_values.py
  :language: python
  :lines: 27-
  :caption: The values data of the DataFrame.
  :name: ex_dataframe_values

.. command-output:: python ./dataframe/dataframe_values.py
   :cwd: ../../../examples

.. seealso::

    :ref:`DataFrame.to_numpy <pandas.DataFrame.to_numpy>`
        Recommended alternative to this method.
    :ref:`DataFrame.index <pandas.DataFrame.index>`
        Retrieve the index labels.
    :ref:`DataFrame.columns <pandas.DataFrame.columns>`
        Retrieving the column names.

.. note::
    The dtype will be a lower-common-denominator dtype (implicit upcasting);
    that is to say if the dtypes (even of numeric types) are mixed, the one that accommodates all will be chosen.
    Use this with care if you are not dealing with the blocks.
    e.g. If the dtypes are float16 and float32, dtype will be upcast to float32. If dtypes are int32 and uint8,
    dtype will be upcast to int32. By numpy.find_common_type() convention,
    mixing int64 and uint64 will result in a float64 dtype.

